[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "coral-complexity-metrics"
description = "A Python package for calculating structural complexity metrics from 3D coral mesh files"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Hannah White", email = "ha.white@aims.gov.au"},
]
keywords = [
    "coral-reef",
    "complexity-metrics",
    "3d-analysis",
    "marine-science"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Scientific/Engineering :: Visualization",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.19.0",
    "typing-extensions>=4.0.0; python_version<'3.10'",
]
dynamic = ["version"]

[project.optional-dependencies]
mesh = [
    "pyvista>=0.40.0",
    "vtk>=9.0.0",
]
spatial = [
    "scipy>=1.7.0",
    "scikit-learn>=1.0.0",
]
gis = [
    "geopandas>=0.10.0",
    "shapely>=1.8.0",
    "fiona>=1.8.0",
]
visualization = [
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
]
validation = [
    "pandas>=1.3.0",
]
full = [
    "coral-complexity-metrics[mesh,spatial,gis,visualization,validation]",
]
dev = [
    "coral-complexity-metrics[full]",
    "pytest>=6.0.0",
    "pytest-cov>=3.0.0",
    "black>=22.0.0",
    "flake8>=4.0.0",
    "mypy>=0.900",
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/open-AIMS/coral-complexity-metrics"
Documentation = "https://coral-complexity-metrics.readthedocs.io"
Repository = "https://github.com/open-AIMS/coral-complexity-metrics.git"
"Bug Tracker" = "https://github.com/open-AIMS/coral-complexity-metrics/issues"
Changelog = "https://github.com/open-AIMS/coral-complexity-metrics/blob/main/CHANGELOG.md"

[tool.setuptools_scm]
write_to = "src/coral_complexity_metrics/_version.py"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"coral_complexity_metrics" = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pyvista.*",
    "vtk.*",
    "geopandas.*",
    "shapely.*",
    "scipy.*",
    "sklearn.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/_version.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
